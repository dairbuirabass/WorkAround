{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/email.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n  static isValid(control: FormControl) {\r\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(\r\n      control.value\r\n    );\r\n\r\n    if (re) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      invalidEmail: true,\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, AlertController } from 'ionic-angular';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { AuthData } from '../../providers/auth/auth';\nimport { EmailValidator } from '../../validators/email';\n\n/**\n * Generated class for the ResetPasswordPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html',\n})\nexport class ResetPasswordPage {\n  public resetPasswordForm: FormGroup;\n  constructor(\n    public navCtrl: NavController,\n    public authProvider: AuthData,\n    public formBuilder: FormBuilder,\n    public alertCtrl: AlertController\n  ) {\n    this.resetPasswordForm = formBuilder.group({\n      email: ['',\n      Validators.compose([Validators.required, EmailValidator.isValid])],\n    });\n  }\n\n  resetPassword(){\n    if (!this.resetPasswordForm.valid){\n      console.log(this.resetPasswordForm.value);\n    } else {\n      this.authProvider.resetPassword(this.resetPasswordForm.value.email)\n      .then((user) => {\n        let alert = this.alertCtrl.create({\n          message: \"We sent you a reset link to your email\",\n          buttons: [\n            {\n              text: \"Ok\",\n              role: 'cancel',\n              handler: () => { this.navCtrl.pop(); }\n            }\n          ]\n        });\n        alert.present();\n\n      }, (error) => {\n        var errorMessage: string = error.message;\n        let errorAlert = this.alertCtrl.create({\n          message: errorMessage,\n          buttons: [{ text: \"Ok\", role: 'cancel' }]\n        });\n        errorAlert.present();\n      });\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ResetPasswordPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}